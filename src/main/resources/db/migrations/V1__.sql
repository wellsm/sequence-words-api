CREATE TABLE rooms
(
    id             VARCHAR(255) NOT NULL,
    state          VARCHAR(50)  NOT NULL,
    how_many_words INTEGER      NOT NULL,
    turn           INTEGER      NOT NULL,
    winner_id      BIGINT,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_rooms PRIMARY KEY (id)
);

CREATE TABLE players
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    room_id        VARCHAR(255)                            NOT NULL,
    name           VARCHAR(255)                            NOT NULL,
    is_owner       BOOLEAN                                 NOT NULL,
    seat           INTEGER                                 NOT NULL,
    is_ready       BOOLEAN                                 NOT NULL,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_players PRIMARY KEY (id)
);

CREATE TABLE words
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    room_id    VARCHAR(255)                            NOT NULL,
    player_id  BIGINT                                  NOT NULL,
    index      INTEGER                                 NOT NULL,
    value      VARCHAR(255)                            NOT NULL,
    revealed   INTEGER                                 NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_words PRIMARY KEY (id)
);

CREATE UNIQUE INDEX IDX_ROOM_SEAT ON players (room_id, seat);

CREATE INDEX IDX_ROOM_PLAYER ON words (room_id, player_id);

CREATE UNIQUE INDEX IDX_PLAYER_INDEX ON words (player_id, index);

ALTER TABLE rooms
    ADD CONSTRAINT FK_ROOM_WINNER FOREIGN KEY (winner_id) REFERENCES players (id);

ALTER TABLE players
    ADD CONSTRAINT FK_PLAYERS_ON_ROOM FOREIGN KEY (room_id) REFERENCES rooms (id);

ALTER TABLE words
    ADD CONSTRAINT FK_WORDS_ON_PLAYER FOREIGN KEY (player_id) REFERENCES players (id);

ALTER TABLE words
    ADD CONSTRAINT FK_WORDS_ON_ROOM FOREIGN KEY (room_id) REFERENCES rooms (id);